# ---------------------------------------------------------
# .zshrc
# ---------------------------------------------------------

# ---------------------------------------------------------
# *** 補完 ***
# ---------------------------------------------------------

# 補完を有効にする
autoload -U compinit
compinit

# エイリアスでも補完機能を有効
setopt complete_aliases

# カーソル位置で補完
setopt complete_in_word

# コマンドライン引数の = 以降も補完する (-prefix=〜等)
setopt magic_equal_subst

# sudo 付きでも補完する
zstyle ':completion:*:sudo:*' environ PATH="$SUDO_PATH:$PATH"

# * 展開に失敗してもエラー表示しない
setopt nonomatch

# ---------------------------------------------------------
# *** プロンプト ***
# ---------------------------------------------------------

# VCSの情報を取得するzshの便利関数 vcs_infoを使う
autoload -Uz vcs_info
# 
# # 表示フォーマットの指定
# # %b ブランチ情報
# # %a アクション名(mergeなど)
zstyle ':vcs_info:*' formats '[%b]'
zstyle ':vcs_info:*' actionformats '[%b|%a]'

precmd () {
	psvar=()
	LANG=en_US.UTF-8 vcs_info
	[[ -n "$vcs_info_msg_0_" ]] && psvar[1]="$vcs_info_msg_0_"
}
             
# バージョン管理されているディレクトリにいれば表示，そうでなければ非表示
RPROMPT="%1(v|%F{green}%1v%f|)"

PROMPT="[%n@%m %1~] %(!.#.$) "

# ---------------------------------------------------------
# *** ディレクトリ ***
# ---------------------------------------------------------

setopt auto_cd           # ディレクトリ名のみで移動
setopt auto_pushd        # ディレクトリ移動時にスタックに積む
setopt pushd_ignore_dups # 同じディレクトリは追加しない
setopt pushd_silent      # ディレクトリスタックの内容を表示しない

# cd 可能なディレクトリ
cdpath=(.. ~/repositories)

if [[ -d "$HOME/project" ]] then
	cdpath=(.. ~/project)
fi
	

# ---------------------------------------------------------
# *** ヒストリ ***
# ---------------------------------------------------------

# ヒストリを拡張形式で保存
setopt extended_history

# ヒストリを複数端末で共有する
setopt share_history

# 履歴を上書きではなく追加する
setopt append_history

HISTFILE=~/.zsh_history # ヒストリを保存するファイル
HISTSIZE=10000          # メモリに記憶しておくヒストリの最大数
SAVEHIST=10000          # ファイルへ保存するヒストリの最大数


# ---------------------------------------------------------
# *** コマンドエイリアス ***
# ---------------------------------------------------------

# ls
alias ls='ls --color=tty'
alias ll='ls -l'
alias la='ls -a'
alias lla='ls -la'

# dir
if ! type -p dir > /dev/null 2>&1; then
	alias dir=ls # 誤発動防止
fi

# cls
alias cls="clear" # タイプミス防止

# diff
alias diff="diff --strip-trailing-cr" # 改行コード無視

alias soz='source ~/.zshrc'

alias tsc='tsc -target ES5 --module "commonjs"'

alias sudo='sudo -i'

alias ns="screen -c \`pwd\`" # 新規スクリーン


# ---------------------------------------------------------
# *** PATH ***
# ---------------------------------------------------------

# 重複パスを登録しない
typeset -U path cdpath fpath manpath

# anyenv
if [[ -d "$HOME/.anyenv" ]] then
	path=(
		$HOME/.anyenv/bin
		${path}
	)

	eval "$(anyenv init -)"
fi

# nodebrew
if [[ -d "$HOME/.nodebrew" ]] then
	path=(
		$HOME/.nodebrew/current/bin
		${path}
	)
fi

# ---------------------------------------------------------
# *** その他 ***
# ---------------------------------------------------------

export GIT_PAGER="lv -c"


# ---------------------------------------------------------
# *** 実行 ***
# ---------------------------------------------------------

# mf-dev
if [[ -d "$HOME/project/Dev" ]] then
	source ~/project/Dev/share/etc/mf-dev.zshrc
fi

# screen を起動
if [[ $TERM != 'screen' ]] then
	screen -xRU
fi

# vim: se noet ts=4 sw=4 sts=0 ft=zsh :
